[ { "title": "Purdue Course PHP Package", "url": "/posts/purdue-course-package/", "categories": "Projects, Packages", "tags": "projects, packages, php, laravel", "date": "2022-04-11 22:10:00 +0900", "snippet": "Synopsis10+ years have been already passed, since concept of Software Development became more like a stacking multiple blocks of package. According to the npmjs official blog (no longer active), the number of packages in npmjs alone is about 1.3 million as of 2020. It is already 2022 today as I am writing this post with my coffee next to it, the number must be still on the rise.This PHP package is one of many wrapper packages in the packagist that can be installed via composer dependency manager through dongyukang/purduecourse.I wrote this php library at 2017 (5 years ago from today) in hope for enhancing user experience by simplifying API query. Basically, dongyukang/purduecourse is a wrapper package, it completely depends on Purdue API, a restful api that allows users to get the Purdue University’s course catalogs through OData queries. By utilizing this package, users are able to reduce repeating process of requesting data, parsing data, and all other time consuming tasks, and they can only focus on one major duty, retrieving Purdue course catalogs. This is the core objective to this project.Brief introduction of the packageOnce installing and setup process is finished, retrieving Purdue course data becomes a pushover.If user wants to retrieve all of informtion of a course name called ‘CS 180’ during fall semester of 2016, a single line of code can achieve a such job. Purdue::fall(2016)-&amp;gt;course(&#39;cs 180&#39;)-&amp;gt;all();The line above will result in:According to Purdue API Entities Hierarchy, the entity chaining consists of following structure:Purdue API Entities Hierarchy (Purdue API)Each entity has its own properties, so that properties can be accessible by method chaining.For instance:Purdue::course(&#39;cs 180&#39;)-&amp;gt;creditHours; // 4.0Purdue::course(&#39;phys 172&#39;)-&amp;gt;countCourses(); // 2 &#39;Regular&#39; and &#39;Honors&#39;Purdue::summer(2016)-&amp;gt;termBegin;Purdue::summer(2016)-&amp;gt;termEnd;Additionally, the package also offers filtering methods such as: // Returns sections that &#39;Type&#39; is matched with $type. &#39;CS 180&#39; has &#39;Lecture&#39; and &#39;Laboratory&#39;.Purdue::course(&#39;cs 180&#39;) -&amp;gt;classes() -&amp;gt;sections() -&amp;gt;type(&#39;Lecture&#39;) -&amp;gt;getSections(); // Returns sections that have &#39;Remaining Space&#39; greater than 20 and less then 60.Purdue::course(&#39;cs 180&#39;) -&amp;gt;classes() -&amp;gt;sections() -&amp;gt;type(&#39;Laboratory&#39;) -&amp;gt;spaceGreaterThan(20) -&amp;gt;spaceLessThan(60) -&amp;gt;getSections();For more details, please refer to this wiki.ApplicationAll set with the coding (although there’s a lot more to fix and add), so did I accomplish the objective to this project? Here is another project I wrote with laravel php framework, named Purlanner. Shortly describing, the meaning of it is a combination of two words, Purdue + Planner. Basically, it is an agenda that helps users to organize school assignments, projects, tests and any other academic related tasks and enable them to plainly check all the due dates that is registered. Writing such application, I thought it would be better if users can access course info, instead of having them manually register every course that they are taking. Additionally, I also thought of building a huge online communication system sharing students’ thoughts based on their assignments that they registered to Purlanner, I thought being able to access Purdue’s massive course info was necessary. So circling back to the first question, did I accomplish the objective to this project? Yes, definitely. It clearly helped me to code much efficient way. I was able to build this web app much faster than I thought through ‘easy-to-read &amp;amp; write’ method chaining. Repeating process of parsing data and requesting data was no longer an issue while developing this web app.Summing upSo I wrote the package dongyukang/purduecourse 5 years ago. I also wrote the Purlanner 5 years ago. Though I was not able to achieve my ultimate end-game goal of building a huge online community, I believe this is because not many people knew and used my application. Even if my product was well-advertised, I doubt that it would become popular among Purdue students. But I consider this as one of my trials, and I can take it as lesson to improve on." }, { "title": "Unpredicted direction of voyage", "url": "/posts/Unpredicted-Direction-Of-Voyage/", "categories": "Blog, Free-Topics", "tags": "blog", "date": "2022-04-06 20:37:00 +0900", "snippet": "Navigating my lifeAs we all know, there’s lots of ups and downs, sudden twists and turns throughout our voyage of life.We sometimes get to our goals unexpectedly. We also suddenly find ourselves in the middle of nowhere, trying desperately to look for some places to settle.Silhouette of boat on sea during sunset (Unsplash)Providing that most of us are sailing without a compass to track our routes, I assume that we are all already tucker out. Although it is quite difficult to determine to which direction should we head, we can always look back on our pasts and make them as milestones to actively monitor our paths and move forward consistently based our past routes.This is why I started blogging today, to leave a milestone.I knew that, at some point in the future, I was going to write my thoughts online and have my own designated space in the web, but never this early. Suddenly, an idea of getting my own “online writing area” took up paramount space of my brain. I made this github repo, github pages and pushed this post without any hesistant, like a dashing flow of torrents. I think I took a turn towards unpredicted direction during my life voyage.It’s time to turn the light on, what’s up next?Practice of looking at my life trails often allows me to reflect on my thoughts and actions I made.Thus, I believe it surely helps me to locate where I am to shed light on my next possible directions of my life.Lighthouse (Unsplash)I started blogging to leave as many milestones as possible. Undoubtedly, there are plenty of topics that I like to write and plenty more services and digital products that I am willing to create. As it is said in the sub-title section, “Artistic Aspects of Software Development”, I would like to elaborate on aesthetical views of crafting codes as my major posts.Hope this voyage leads me to somewhere in the ocean." } ]
